|top_level
clk => simple_struct:u0.clk_clk
en => simple_struct:u0.reset_reset_n
leds_out[0] << simple_struct:u0.leds_leds[0]
leds_out[1] << simple_struct:u0.leds_leds[1]
leds_out[2] << simple_struct:u0.leds_leds[2]
leds_out[3] << simple_struct:u0.leds_leds[3]
TXD << simple_struct:u0.usart_txd
RXD => simple_struct:u0.usart_rxd
SDA <> SDA
SCL <> SCL
keys_in[0] => simple_struct:u0.input0_input0
keys_in[1] => simple_struct:u0.input0_1_input0
keys_in[2] => ~NO_FANOUT~
keys_in[3] => ~NO_FANOUT~
dig_sel[0] << simple_struct:u0.indicator_indicator[0]
dig_sel[1] << simple_struct:u0.indicator_indicator[1]
dig_sel[2] << simple_struct:u0.indicator_indicator[2]
dig_sel[3] << simple_struct:u0.indicator_indicator[3]
seg7_code[0] << simple_struct:u0.segment_segment[0]
seg7_code[1] << simple_struct:u0.segment_segment[1]
seg7_code[2] << simple_struct:u0.segment_segment[2]
seg7_code[3] << simple_struct:u0.segment_segment[3]
seg7_code[4] << simple_struct:u0.segment_segment[4]
seg7_code[5] << simple_struct:u0.segment_segment[5]
seg7_code[6] << simple_struct:u0.segment_segment[6]
seg7_code[7] << simple_struct:u0.segment_segment[7]
buzz << simple_struct:u0.buzz_buzz


|top_level|simple_struct:u0
buzz_buzz <= controller:controller_0.buzz
clk_clk => clk_clk.IN9
enable_enable[0] => enable_enable[0].IN1
enable_enable[1] => enable_enable[1].IN1
enable_enable[2] => enable_enable[2].IN1
enable_enable[3] => enable_enable[3].IN1
indicator_indicator[0] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.indicator
indicator_indicator[1] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.indicator
indicator_indicator[2] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.indicator
indicator_indicator[3] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.indicator
indicator3_indicator3[0] => indicator3_indicator3[0].IN1
indicator3_indicator3[1] => indicator3_indicator3[1].IN1
indicator3_indicator3[2] => indicator3_indicator3[2].IN1
indicator3_indicator3[3] => indicator3_indicator3[3].IN1
indicator3_indicator3[4] => indicator3_indicator3[4].IN1
indicator3_indicator3[5] => indicator3_indicator3[5].IN1
indicator3_indicator3[6] => indicator3_indicator3[6].IN1
indicator3_indicator3[7] => indicator3_indicator3[7].IN1
input0_input0 => input0_input0.IN1
input0_1_input0 => input0_1_input0.IN1
leds_leds[0] <= controller:controller_0.leds
leds_leds[1] <= controller:controller_0.leds
leds_leds[2] <= controller:controller_0.leds
leds_leds[3] <= controller:controller_0.leds
reset_reset_n => _.IN1
scl_in => scl_in.IN1
scl_oe <= i2c_master:i2c_transcever_0.scl_oe
sda_in => sda_in.IN1
sda_oe <= i2c_master:i2c_transcever_0.sda_oe
segment_segment[0] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[1] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[2] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[3] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[4] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[5] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[6] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
segment_segment[7] <= DynamicIllumination4Indicators:dynamicillumination4indicators_0.segment
usart_rxd => usart_rxd.IN1
usart_txd <= usart:usart_0.tx


|top_level|simple_struct:u0|Count250000:count250000_0
clkIn => clkOutBuf.CLK
clkIn => clkCounter[0].CLK
clkIn => clkCounter[1].CLK
clkIn => clkCounter[2].CLK
clkIn => clkCounter[3].CLK
clkIn => clkCounter[4].CLK
clkIn => clkCounter[5].CLK
clkIn => clkCounter[6].CLK
clkIn => clkCounter[7].CLK
clkIn => clkCounter[8].CLK
clkIn => clkCounter[9].CLK
clkIn => clkCounter[10].CLK
clkIn => clkCounter[11].CLK
clkIn => clkCounter[12].CLK
clkIn => clkCounter[13].CLK
clkIn => clkCounter[14].CLK
clkIn => clkCounter[15].CLK
clkIn => clkCounter[16].CLK
clkOut <= clkOutBuf.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|DataConversionUnit:dataconversionunit_0
clk => indicator2[0]~reg0.CLK
clk => indicator2[1]~reg0.CLK
clk => indicator2[2]~reg0.CLK
clk => indicator2[3]~reg0.CLK
clk => indicator2[4]~reg0.CLK
clk => indicator2[5]~reg0.CLK
clk => indicator2[6]~reg0.CLK
clk => indicator2[7]~reg0.CLK
clk => indicator1[0]~reg0.CLK
clk => indicator1[1]~reg0.CLK
clk => indicator1[2]~reg0.CLK
clk => indicator1[3]~reg0.CLK
clk => indicator1[4]~reg0.CLK
clk => indicator1[5]~reg0.CLK
clk => indicator1[6]~reg0.CLK
clk => indicator1[7]~reg0.CLK
clk => indicator0[0]~reg0.CLK
clk => indicator0[1]~reg0.CLK
clk => indicator0[2]~reg0.CLK
clk => indicator0[3]~reg0.CLK
clk => indicator0[4]~reg0.CLK
clk => indicator0[5]~reg0.CLK
clk => indicator0[6]~reg0.CLK
clk => indicator0[7]~reg0.CLK
clk => updatePrev.CLK
clk => indicator0Buf[0].CLK
clk => indicator0Buf[1].CLK
clk => indicator0Buf[2].CLK
clk => indicator0Buf[3].CLK
clk => indicator2Buf[0].CLK
clk => indicator2Buf[1].CLK
clk => indicator2Buf[2].CLK
clk => indicator2Buf[3].CLK
clk => indicator1Buf[0].CLK
clk => indicator1Buf[1].CLK
clk => indicator1Buf[2].CLK
clk => indicator1Buf[3].CLK
clk => precision.CLK
clk => dataBuf[0].CLK
clk => dataBuf[1].CLK
clk => dataBuf[2].CLK
clk => dataBuf[3].CLK
clk => dataBuf[4].CLK
clk => dataBuf[5].CLK
clk => dataBuf[6].CLK
clk => dataBuf[7].CLK
update => process_0.IN1
update => updatePrev.DATAIN
update => process_0.IN1
data[0] => precision.DATAIN
data[1] => dataBuf[0].DATAIN
data[2] => dataBuf[1].DATAIN
data[3] => dataBuf[2].DATAIN
data[4] => dataBuf[3].DATAIN
data[5] => dataBuf[4].DATAIN
data[6] => dataBuf[5].DATAIN
data[7] => dataBuf[6].DATAIN
indicator0[0] <= indicator0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[1] <= indicator0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[2] <= indicator0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[3] <= indicator0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[4] <= indicator0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[5] <= indicator0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[6] <= indicator0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator0[7] <= indicator0[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[0] <= indicator1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[1] <= indicator1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[2] <= indicator1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[3] <= indicator1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[4] <= indicator1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[5] <= indicator1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[6] <= indicator1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator1[7] <= indicator1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[0] <= indicator2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[1] <= indicator2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[2] <= indicator2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[3] <= indicator2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[4] <= indicator2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[5] <= indicator2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[6] <= indicator2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
indicator2[7] <= indicator2[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|DigitalFilter:digitalfilter_0
clk => output0~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => latch.CLK
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => output0.OUTPUTSELECT
input0 => latch.DATAIN
output0 <= output0~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|DigitalFilter:digitalfilter_1
clk => output0~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => latch.CLK
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => count.OUTPUTSELECT
input0 => output0.OUTPUTSELECT
input0 => latch.DATAIN
output0 <= output0~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|DynamicIllumination4Indicators:dynamicillumination4indicators_0
clk => clkCounter[0].CLK
clk => clkCounter[1].CLK
clk => clkCount[0].CLK
clk => clkCount[1].CLK
clk => clkCount[2].CLK
clk => clkCount[3].CLK
clk => clkCount[4].CLK
clk => clkCount[5].CLK
clk => clkCount[6].CLK
clk => clkCount[7].CLK
clk => clkCount[8].CLK
clk => clkCount[9].CLK
clk => clkCount[10].CLK
clk => clkCount[11].CLK
clk => clkCount[12].CLK
clk => clkCount[13].CLK
clk => clkCount[14].CLK
clk => clkCount[15].CLK
clk => clkCount[16].CLK
enable[0] => Mux12.IN3
enable[1] => Mux12.IN2
enable[2] => Mux12.IN1
enable[3] => Mux12.IN0
indicator0[0] => Mux11.IN0
indicator0[1] => Mux10.IN0
indicator0[2] => Mux9.IN0
indicator0[3] => Mux8.IN0
indicator0[4] => Mux7.IN0
indicator0[5] => Mux6.IN0
indicator0[6] => Mux5.IN0
indicator0[7] => Mux4.IN0
indicator1[0] => Mux11.IN1
indicator1[1] => Mux10.IN1
indicator1[2] => Mux9.IN1
indicator1[3] => Mux8.IN1
indicator1[4] => Mux7.IN1
indicator1[5] => Mux6.IN1
indicator1[6] => Mux5.IN1
indicator1[7] => Mux4.IN1
indicator2[0] => Mux11.IN2
indicator2[1] => Mux10.IN2
indicator2[2] => Mux9.IN2
indicator2[3] => Mux8.IN2
indicator2[4] => Mux7.IN2
indicator2[5] => Mux6.IN2
indicator2[6] => Mux5.IN2
indicator2[7] => Mux4.IN2
indicator3[0] => Mux11.IN3
indicator3[1] => Mux10.IN3
indicator3[2] => Mux9.IN3
indicator3[3] => Mux8.IN3
indicator3[4] => Mux7.IN3
indicator3[5] => Mux6.IN3
indicator3[6] => Mux5.IN3
indicator3[7] => Mux4.IN3
segment[0] <= segment[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[1] <= segment[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[2] <= segment[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[3] <= segment[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[4] <= segment[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[5] <= segment[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[6] <= segment[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment[7] <= segment[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
indicator[0] <= indicator[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
indicator[1] <= indicator[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
indicator[2] <= indicator[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
indicator[3] <= indicator[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|controller:controller_0
en => pgen:start_gen.Enable
en => clk_05Hz.ACLR
en => cnt_05Hz[0].ACLR
en => cnt_05Hz[1].ACLR
en => cnt_05Hz[2].ACLR
en => cnt_05Hz[3].ACLR
en => cnt_05Hz[4].ACLR
en => cnt_05Hz[5].ACLR
en => cnt_05Hz[6].ACLR
en => cnt_05Hz[7].ACLR
en => cnt_05Hz[8].ACLR
en => cnt_05Hz[9].ACLR
en => cnt_05Hz[10].ACLR
en => cnt_05Hz[11].ACLR
en => cnt_05Hz[12].ACLR
en => cnt_05Hz[13].ACLR
en => cnt_05Hz[14].ACLR
en => cnt_05Hz[15].ACLR
en => cnt_05Hz[16].ACLR
en => cnt_05Hz[17].ACLR
en => cnt_05Hz[18].ACLR
en => cnt_05Hz[19].ACLR
en => cnt_05Hz[20].ACLR
en => cnt_05Hz[21].ACLR
en => cnt_05Hz[22].ACLR
en => cnt_05Hz[23].ACLR
en => cnt_05Hz[24].ACLR
en => cnt_05Hz[25].ACLR
en => FSM.IN1
en => buzz~reg0.ACLR
en => start_stop.ACLR
en => clk_500Hz.ACLR
en => cnt_500Hz[0].ACLR
en => cnt_500Hz[1].ACLR
en => cnt_500Hz[2].ACLR
en => cnt_500Hz[3].ACLR
en => cnt_500Hz[4].ACLR
en => cnt_500Hz[5].ACLR
en => cnt_500Hz[6].ACLR
en => cnt_500Hz[7].ACLR
en => cnt_500Hz[8].ACLR
en => cnt_500Hz[9].ACLR
en => clk_1000Hz.ACLR
en => cnt_1000Hz[0].ACLR
en => cnt_1000Hz[1].ACLR
en => cnt_1000Hz[2].ACLR
en => cnt_1000Hz[3].ACLR
en => cnt_1000Hz[4].ACLR
en => cnt_1000Hz[5].ACLR
en => cnt_1000Hz[6].ACLR
en => cnt_1000Hz[7].ACLR
en => cnt_1000Hz[8].ACLR
en => cnt_1000Hz[9].ACLR
en => cnt_1000Hz[10].ACLR
en => clk_1Hz.ACLR
en => count_1Hz[0].ACLR
en => count_1Hz[1].ACLR
en => count_1Hz[2].ACLR
en => count_1Hz[3].ACLR
en => count_1Hz[4].ACLR
en => count_1Hz[5].ACLR
en => count_1Hz[6].ACLR
en => count_1Hz[7].ACLR
en => count_1Hz[8].ACLR
en => count_1Hz[9].ACLR
en => count_1Hz[10].ACLR
en => count_1Hz[11].ACLR
en => count_1Hz[12].ACLR
en => count_1Hz[13].ACLR
en => count_1Hz[14].ACLR
en => count_1Hz[15].ACLR
en => count_1Hz[16].ACLR
en => count_1Hz[17].ACLR
en => count_1Hz[18].ACLR
en => count_1Hz[19].ACLR
en => count_1Hz[20].ACLR
en => count_1Hz[21].ACLR
en => count_1Hz[22].ACLR
en => count_1Hz[23].ACLR
en => count_1Hz[24].ACLR
en => \ReceiveCMD:byteCount.ACLR
en => key1Prev.ENA
en => key2Prev.ENA
en => cmdLimit.ENA
en => Temper_Limit_Low[7].ENA
en => Temper_Limit_Low[6].ENA
en => Temper_Limit_Low[5].ENA
en => Temper_Limit_Low[4].ENA
en => Temper_Limit_Low[3].ENA
en => Temper_Limit_Low[2].ENA
en => Temper_Limit_Low[1].ENA
en => Temper_Limit_Low[0].ENA
en => Temper_Limit_High[7].ENA
en => Temper_Limit_High[6].ENA
en => Temper_Limit_High[5].ENA
en => Temper_Limit_High[4].ENA
en => Temper_Limit_High[3].ENA
en => Temper_Limit_High[2].ENA
en => Temper_Limit_High[1].ENA
en => Temper_Limit_High[0].ENA
en => uart_rx_ready_prev.ENA
clk => pgen:start_gen.Clk
clk => uart_tx_data[0]~reg0.CLK
clk => uart_tx_data[1]~reg0.CLK
clk => uart_tx_data[2]~reg0.CLK
clk => uart_tx_data[3]~reg0.CLK
clk => uart_tx_data[4]~reg0.CLK
clk => uart_tx_data[5]~reg0.CLK
clk => uart_tx_data[6]~reg0.CLK
clk => uart_tx_data[7]~reg0.CLK
clk => dataToUpdate[0]~reg0.CLK
clk => dataToUpdate[1]~reg0.CLK
clk => dataToUpdate[2]~reg0.CLK
clk => dataToUpdate[3]~reg0.CLK
clk => dataToUpdate[4]~reg0.CLK
clk => dataToUpdate[5]~reg0.CLK
clk => dataToUpdate[6]~reg0.CLK
clk => dataToUpdate[7]~reg0.CLK
clk => I2C_WrData[0].CLK
clk => I2C_WrData[1].CLK
clk => I2C_WrData[2].CLK
clk => I2C_WrData[3].CLK
clk => I2C_WrData[4].CLK
clk => I2C_WrData[5].CLK
clk => I2C_WrData[6].CLK
clk => I2C_WrData[7].CLK
clk => i2c_rw~reg0.CLK
clk => I2C_DevAddr[0].CLK
clk => I2C_DevAddr[1].CLK
clk => I2C_DevAddr[2].CLK
clk => I2C_DevAddr[3].CLK
clk => I2C_DevAddr[4].CLK
clk => I2C_DevAddr[5].CLK
clk => I2C_DevAddr[6].CLK
clk => I2C_RxArray[1][7].CLK
clk => I2C_RxArray[0][0].CLK
clk => I2C_RxArray[0][1].CLK
clk => I2C_RxArray[0][2].CLK
clk => I2C_RxArray[0][3].CLK
clk => I2C_RxArray[0][4].CLK
clk => I2C_RxArray[0][5].CLK
clk => I2C_RxArray[0][6].CLK
clk => leds[0]~reg0.CLK
clk => leds[1]~reg0.CLK
clk => leds[2]~reg0.CLK
clk => leds[3]~reg0.CLK
clk => CMD[0].CLK
clk => CMD[1].CLK
clk => CMD[2].CLK
clk => CMD[3].CLK
clk => CMD[4].CLK
clk => CMD[5].CLK
clk => CMD[6].CLK
clk => CMD[7].CLK
clk => send_limit_en.CLK
clk => I2C_RxDataLen[0].CLK
clk => I2C_RxDataLen[1].CLK
clk => I2C_RxDataLen[2].CLK
clk => I2C_RxDataLen[3].CLK
clk => RegRdDone.CLK
clk => I2C_ByteCnt[0].CLK
clk => I2C_ByteCnt[1].CLK
clk => I2C_ByteCnt[2].CLK
clk => I2C_ByteCnt[3].CLK
clk => I2C_Load.CLK
clk => I2C_BusyPrev.CLK
clk => uart_tx_dv~reg0.CLK
clk => buzz_mode[0].CLK
clk => buzz_mode[1].CLK
clk => Temper[0].CLK
clk => Temper[1].CLK
clk => Temper[2].CLK
clk => Temper[3].CLK
clk => Temper[4].CLK
clk => Temper[5].CLK
clk => Temper[6].CLK
clk => Temper[7].CLK
clk => \FSM:show_cnt[0].CLK
clk => \FSM:show_cnt[1].CLK
clk => \FSM:show_cnt[2].CLK
clk => \FSM:show_cnt[3].CLK
clk => \FSM:show_cnt[4].CLK
clk => uart_rx_ready_prev.CLK
clk => Temper_Limit_High[0].CLK
clk => Temper_Limit_High[1].CLK
clk => Temper_Limit_High[2].CLK
clk => Temper_Limit_High[3].CLK
clk => Temper_Limit_High[4].CLK
clk => Temper_Limit_High[5].CLK
clk => Temper_Limit_High[6].CLK
clk => Temper_Limit_High[7].CLK
clk => Temper_Limit_Low[0].CLK
clk => Temper_Limit_Low[1].CLK
clk => Temper_Limit_Low[2].CLK
clk => Temper_Limit_Low[3].CLK
clk => Temper_Limit_Low[4].CLK
clk => Temper_Limit_Low[5].CLK
clk => Temper_Limit_Low[6].CLK
clk => Temper_Limit_Low[7].CLK
clk => cmdLimit.CLK
clk => \ReceiveCMD:byteCount.CLK
clk => buzz~reg0.CLK
clk => clk_1Hz.CLK
clk => count_1Hz[0].CLK
clk => count_1Hz[1].CLK
clk => count_1Hz[2].CLK
clk => count_1Hz[3].CLK
clk => count_1Hz[4].CLK
clk => count_1Hz[5].CLK
clk => count_1Hz[6].CLK
clk => count_1Hz[7].CLK
clk => count_1Hz[8].CLK
clk => count_1Hz[9].CLK
clk => count_1Hz[10].CLK
clk => count_1Hz[11].CLK
clk => count_1Hz[12].CLK
clk => count_1Hz[13].CLK
clk => count_1Hz[14].CLK
clk => count_1Hz[15].CLK
clk => count_1Hz[16].CLK
clk => count_1Hz[17].CLK
clk => count_1Hz[18].CLK
clk => count_1Hz[19].CLK
clk => count_1Hz[20].CLK
clk => count_1Hz[21].CLK
clk => count_1Hz[22].CLK
clk => count_1Hz[23].CLK
clk => count_1Hz[24].CLK
clk => clk_1000Hz.CLK
clk => cnt_1000Hz[0].CLK
clk => cnt_1000Hz[1].CLK
clk => cnt_1000Hz[2].CLK
clk => cnt_1000Hz[3].CLK
clk => cnt_1000Hz[4].CLK
clk => cnt_1000Hz[5].CLK
clk => cnt_1000Hz[6].CLK
clk => cnt_1000Hz[7].CLK
clk => cnt_1000Hz[8].CLK
clk => cnt_1000Hz[9].CLK
clk => cnt_1000Hz[10].CLK
clk => clk_500Hz.CLK
clk => cnt_500Hz[0].CLK
clk => cnt_500Hz[1].CLK
clk => cnt_500Hz[2].CLK
clk => cnt_500Hz[3].CLK
clk => cnt_500Hz[4].CLK
clk => cnt_500Hz[5].CLK
clk => cnt_500Hz[6].CLK
clk => cnt_500Hz[7].CLK
clk => cnt_500Hz[8].CLK
clk => cnt_500Hz[9].CLK
clk => clk_05Hz.CLK
clk => cnt_05Hz[0].CLK
clk => cnt_05Hz[1].CLK
clk => cnt_05Hz[2].CLK
clk => cnt_05Hz[3].CLK
clk => cnt_05Hz[4].CLK
clk => cnt_05Hz[5].CLK
clk => cnt_05Hz[6].CLK
clk => cnt_05Hz[7].CLK
clk => cnt_05Hz[8].CLK
clk => cnt_05Hz[9].CLK
clk => cnt_05Hz[10].CLK
clk => cnt_05Hz[11].CLK
clk => cnt_05Hz[12].CLK
clk => cnt_05Hz[13].CLK
clk => cnt_05Hz[14].CLK
clk => cnt_05Hz[15].CLK
clk => cnt_05Hz[16].CLK
clk => cnt_05Hz[17].CLK
clk => cnt_05Hz[18].CLK
clk => cnt_05Hz[19].CLK
clk => cnt_05Hz[20].CLK
clk => cnt_05Hz[21].CLK
clk => cnt_05Hz[22].CLK
clk => cnt_05Hz[23].CLK
clk => cnt_05Hz[24].CLK
clk => cnt_05Hz[25].CLK
clk => key2Prev.CLK
clk => key1Prev.CLK
clk => start_stop.CLK
clk => PresState~6.DATAIN
leds[0] <= leds[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
leds[1] <= leds[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
leds[2] <= leds[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
leds[3] <= leds[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[0] <= uart_tx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[1] <= uart_tx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[2] <= uart_tx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[3] <= uart_tx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[4] <= uart_tx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[5] <= uart_tx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[6] <= uart_tx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[7] <= uart_tx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[8] <= <GND>
uart_tx_data[9] <= <GND>
uart_tx_data[10] <= <GND>
uart_tx_data[11] <= <GND>
uart_tx_data[12] <= <GND>
uart_tx_data[13] <= <GND>
uart_tx_data[14] <= <GND>
uart_tx_data[15] <= <GND>
uart_rx_data[0] => Temper_Limit_Low.DATAB
uart_rx_data[0] => Temper_Limit_High.DATAA
uart_rx_data[0] => cmdLimit.DATAB
uart_rx_data[1] => Temper_Limit_Low.DATAB
uart_rx_data[1] => Temper_Limit_High.DATAA
uart_rx_data[2] => Temper_Limit_Low.DATAB
uart_rx_data[2] => Temper_Limit_High.DATAA
uart_rx_data[3] => Temper_Limit_Low.DATAB
uart_rx_data[3] => Temper_Limit_High.DATAA
uart_rx_data[4] => Temper_Limit_Low.DATAB
uart_rx_data[4] => Temper_Limit_High.DATAA
uart_rx_data[5] => Temper_Limit_Low.DATAB
uart_rx_data[5] => Temper_Limit_High.DATAA
uart_rx_data[6] => Temper_Limit_Low.DATAB
uart_rx_data[6] => Temper_Limit_High.DATAA
uart_rx_data[7] => Temper_Limit_Low.DATAB
uart_rx_data[7] => Temper_Limit_High.DATAA
uart_rx_data[8] => ~NO_FANOUT~
uart_rx_data[9] => ~NO_FANOUT~
uart_rx_data[10] => ~NO_FANOUT~
uart_rx_data[11] => ~NO_FANOUT~
uart_rx_data[12] => ~NO_FANOUT~
uart_rx_data[13] => ~NO_FANOUT~
uart_rx_data[14] => ~NO_FANOUT~
uart_rx_data[15] => ~NO_FANOUT~
uart_tx_dv <= uart_tx_dv~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_ready => ReceiveCMD.IN0
uart_rx_ready => uart_rx_ready_prev.DATAIN
uart_rx_busy => ReceiveCMD.IN1
uart_tx_ready => send_limit_en.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => CMD.OUTPUTSELECT
uart_tx_ready => leds.OUTPUTSELECT
uart_tx_ready => leds.OUTPUTSELECT
uart_tx_ready => leds.OUTPUTSELECT
uart_tx_ready => leds.OUTPUTSELECT
uart_tx_ready => buzz_mode.OUTPUTSELECT
uart_tx_ready => buzz_mode.OUTPUTSELECT
uart_tx_ready => PresState.OUTPUTSELECT
uart_tx_ready => PresState.OUTPUTSELECT
uart_tx_ready => PresState.OUTPUTSELECT
uart_tx_ready => PresState.OUTPUTSELECT
uart_tx_ready => PresState.OUTPUTSELECT
i2c_ena <= I2C_Load.DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[0] <= I2C_DevAddr[0].DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[1] <= I2C_DevAddr[1].DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[2] <= I2C_DevAddr[2].DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[3] <= I2C_DevAddr[3].DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[4] <= I2C_DevAddr[4].DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[5] <= I2C_DevAddr[5].DB_MAX_OUTPUT_PORT_TYPE
i2c_addr[6] <= I2C_DevAddr[6].DB_MAX_OUTPUT_PORT_TYPE
i2c_rw <= i2c_rw~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[0] <= I2C_WrData[0].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[1] <= I2C_WrData[1].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[2] <= I2C_WrData[2].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[3] <= I2C_WrData[3].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[4] <= I2C_WrData[4].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[5] <= I2C_WrData[5].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[6] <= I2C_WrData[6].DB_MAX_OUTPUT_PORT_TYPE
i2c_data_wr[7] <= I2C_WrData[7].DB_MAX_OUTPUT_PORT_TYPE
i2c_busy => i2c_array_rd.IN1
i2c_busy => I2C_BusyPrev.DATAA
i2c_busy => PresState.OUTPUTSELECT
i2c_busy => PresState.OUTPUTSELECT
i2c_busy => PresState.OUTPUTSELECT
i2c_busy => PresState.OUTPUTSELECT
i2c_busy => PresState.OUTPUTSELECT
i2c_busy => i2c_array_rd.IN1
i2c_busy => i2c_array_rd.IN1
i2c_data_rd[0] => regval_rd.DATAB
i2c_data_rd[1] => regval_rd.DATAB
i2c_data_rd[2] => regval_rd.DATAB
i2c_data_rd[3] => regval_rd.DATAB
i2c_data_rd[4] => regval_rd.DATAB
i2c_data_rd[5] => regval_rd.DATAB
i2c_data_rd[6] => regval_rd.DATAB
i2c_data_rd[7] => regval_rd.DATAB
key1 => gen_start_stop.IN1
key1 => key1Prev.DATAIN
key2 => gen_start_stop.IN1
key2 => key2Prev.DATAIN
dataToUpdate[0] <= dataToUpdate[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[1] <= dataToUpdate[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[2] <= dataToUpdate[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[3] <= dataToUpdate[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[4] <= dataToUpdate[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[5] <= dataToUpdate[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[6] <= dataToUpdate[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataToUpdate[7] <= dataToUpdate[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buzz <= buzz~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|controller:controller_0|pgen:start_gen
Enable => Output~reg0.ACLR
Enable => i2.ACLR
Enable => i1.ACLR
Clk => Output~reg0.CLK
Clk => i2.CLK
Clk => i1.CLK
Input => i1.DATAIN
Output <= Output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|i2c_master:i2c_transcever_0
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => state~1.DATAIN
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.ACLR
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_rx[0].ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
reset_n => data_rx[7].ENA
reset_n => data_rx[6].ENA
reset_n => data_rx[5].ENA
reset_n => data_rx[4].ENA
reset_n => data_rx[3].ENA
reset_n => data_rx[2].ENA
reset_n => data_rx[1].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda_oe <= Selector29.DB_MAX_OUTPUT_PORT_TYPE
sda_in => process_1.IN1
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
sda_in => data_rx.DATAB
scl_oe <= scl_oe.DB_MAX_OUTPUT_PORT_TYPE
scl_in => stretch.DATAIN


|top_level|simple_struct:u0|usart:usart_0
en => receive_data[0].ACLR
en => receive_data[1].ACLR
en => receive_data[2].ACLR
en => receive_data[3].ACLR
en => receive_data[4].ACLR
en => receive_data[5].ACLR
en => receive_data[6].ACLR
en => receive_data[7].ACLR
en => receive_data[8].ACLR
en => receive_data[9].ACLR
en => receive_data[10].ACLR
en => rx_busy~reg0.ACLR
en => rx_counter[0].ACLR
en => rx_counter[1].ACLR
en => rx_counter[2].ACLR
en => rx_counter[3].ACLR
en => rx_counter[4].ACLR
en => rx_counter[5].ACLR
en => rx_counter[6].ACLR
en => rx_counter[7].ACLR
en => rx_counter[8].ACLR
en => rx_counter[9].ACLR
en => rx_counter[10].ACLR
en => rx_counter[11].ACLR
en => rx_counter[12].ACLR
en => rx_dv~reg0.ACLR
en => rx_bits[0].ACLR
en => rx_bits[1].ACLR
en => rx_bits[2].ACLR
en => rx_bits[3].ACLR
en => tx_ready~reg0.PRESET
en => tx_out.PRESET
en => bits[0].ACLR
en => bits[1].ACLR
en => bits[2].ACLR
en => bits[3].ACLR
en => tx_en.ACLR
en => bit_clk.ACLR
en => baud_counter[0].ACLR
en => baud_counter[1].ACLR
en => baud_counter[2].ACLR
en => baud_counter[3].ACLR
en => baud_counter[4].ACLR
en => baud_counter[5].ACLR
en => baud_counter[6].ACLR
en => baud_counter[7].ACLR
en => baud_counter[8].ACLR
en => baud_counter[9].ACLR
en => baud_counter[10].ACLR
en => baud_counter[11].ACLR
en => tx_dv_latch.ACLR
en => next_state~8.DATAIN
en => pr_state~3.DATAIN
en => send_data[15].ENA
en => send_data[14].ENA
en => send_data[13].ENA
en => send_data[12].ENA
en => send_data[11].ENA
en => send_data[10].ENA
en => send_data[9].ENA
en => send_data[8].ENA
en => send_data[7].ENA
en => send_data[6].ENA
en => send_data[5].ENA
en => send_data[4].ENA
en => send_data[3].ENA
en => send_data[2].ENA
en => send_data[1].ENA
en => send_data[0].ENA
en => rx_data[0]~reg0.ENA
en => rx_data[15]~reg0.ENA
en => rx_data[14]~reg0.ENA
en => rx_data[13]~reg0.ENA
en => rx_data[12]~reg0.ENA
en => rx_data[11]~reg0.ENA
en => rx_data[10]~reg0.ENA
en => rx_data[9]~reg0.ENA
en => rx_data[8]~reg0.ENA
en => rx_data[7]~reg0.ENA
en => rx_data[6]~reg0.ENA
en => rx_data[5]~reg0.ENA
en => rx_data[4]~reg0.ENA
en => rx_data[3]~reg0.ENA
en => rx_data[2]~reg0.ENA
en => rx_data[1]~reg0.ENA
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_data[8]~reg0.CLK
clk => rx_data[9]~reg0.CLK
clk => rx_data[10]~reg0.CLK
clk => rx_data[11]~reg0.CLK
clk => rx_data[12]~reg0.CLK
clk => rx_data[13]~reg0.CLK
clk => rx_data[14]~reg0.CLK
clk => rx_data[15]~reg0.CLK
clk => receive_data[0].CLK
clk => receive_data[1].CLK
clk => receive_data[2].CLK
clk => receive_data[3].CLK
clk => receive_data[4].CLK
clk => receive_data[5].CLK
clk => receive_data[6].CLK
clk => receive_data[7].CLK
clk => receive_data[8].CLK
clk => receive_data[9].CLK
clk => receive_data[10].CLK
clk => rx_busy~reg0.CLK
clk => rx_counter[0].CLK
clk => rx_counter[1].CLK
clk => rx_counter[2].CLK
clk => rx_counter[3].CLK
clk => rx_counter[4].CLK
clk => rx_counter[5].CLK
clk => rx_counter[6].CLK
clk => rx_counter[7].CLK
clk => rx_counter[8].CLK
clk => rx_counter[9].CLK
clk => rx_counter[10].CLK
clk => rx_counter[11].CLK
clk => rx_counter[12].CLK
clk => rx_dv~reg0.CLK
clk => rx_bits[0].CLK
clk => rx_bits[1].CLK
clk => rx_bits[2].CLK
clk => rx_bits[3].CLK
clk => send_data[0].CLK
clk => send_data[1].CLK
clk => send_data[2].CLK
clk => send_data[3].CLK
clk => send_data[4].CLK
clk => send_data[5].CLK
clk => send_data[6].CLK
clk => send_data[7].CLK
clk => send_data[8].CLK
clk => send_data[9].CLK
clk => send_data[10].CLK
clk => send_data[11].CLK
clk => send_data[12].CLK
clk => send_data[13].CLK
clk => send_data[14].CLK
clk => send_data[15].CLK
clk => tx_dv_latch.CLK
clk => bit_clk.CLK
clk => baud_counter[0].CLK
clk => baud_counter[1].CLK
clk => baud_counter[2].CLK
clk => baud_counter[3].CLK
clk => baud_counter[4].CLK
clk => baud_counter[5].CLK
clk => baud_counter[6].CLK
clk => baud_counter[7].CLK
clk => baud_counter[8].CLK
clk => baud_counter[9].CLK
clk => baud_counter[10].CLK
clk => baud_counter[11].CLK
clk => next_state~6.DATAIN
clk => pr_state~1.DATAIN
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => receive_data.DATAB
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_data.OUTPUTSELECT
rx => rx_dv.DATAA
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
tx <= tx_out.DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] => send_data.DATAB
tx_data[1] => send_data.DATAB
tx_data[2] => send_data.DATAB
tx_data[3] => send_data.DATAB
tx_data[4] => send_data.DATAB
tx_data[5] => send_data.DATAB
tx_data[6] => send_data.DATAB
tx_data[7] => send_data.DATAB
tx_data[8] => ~NO_FANOUT~
tx_data[9] => send_data.DATAB
tx_data[10] => send_data.DATAB
tx_data[11] => send_data.DATAB
tx_data[12] => send_data.DATAB
tx_data[13] => send_data.DATAB
tx_data[14] => send_data.DATAB
tx_data[15] => ~NO_FANOUT~
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[8] <= rx_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[9] <= rx_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[10] <= rx_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[11] <= rx_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[12] <= rx_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[13] <= rx_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[14] <= rx_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[15] <= rx_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => send_data.OUTPUTSELECT
tx_dv => tx_dv_latch.OUTPUTSELECT
rx_dv <= rx_dv~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_busy <= rx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_ready <= tx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|altera_reset_controller:rst_controller
reset_in0 => merged_reset.IN0
reset_in1 => merged_reset.IN1
reset_in2 => merged_reset.IN1
reset_in3 => merged_reset.IN1
reset_in4 => merged_reset.IN1
reset_in5 => merged_reset.IN1
reset_in6 => merged_reset.IN1
reset_in7 => merged_reset.IN1
reset_in8 => merged_reset.IN1
reset_in9 => merged_reset.IN1
reset_in10 => merged_reset.IN1
reset_in11 => merged_reset.IN1
reset_in12 => merged_reset.IN1
reset_in13 => merged_reset.IN1
reset_in14 => merged_reset.IN1
reset_in15 => merged_reset.IN1
reset_req_in0 => ~NO_FANOUT~
reset_req_in1 => ~NO_FANOUT~
reset_req_in2 => ~NO_FANOUT~
reset_req_in3 => ~NO_FANOUT~
reset_req_in4 => ~NO_FANOUT~
reset_req_in5 => ~NO_FANOUT~
reset_req_in6 => ~NO_FANOUT~
reset_req_in7 => ~NO_FANOUT~
reset_req_in8 => ~NO_FANOUT~
reset_req_in9 => ~NO_FANOUT~
reset_req_in10 => ~NO_FANOUT~
reset_req_in11 => ~NO_FANOUT~
reset_req_in12 => ~NO_FANOUT~
reset_req_in13 => ~NO_FANOUT~
reset_req_in14 => ~NO_FANOUT~
reset_req_in15 => ~NO_FANOUT~
clk => clk.IN2
reset_out <= altera_reset_synchronizer:alt_rst_sync_uq1.reset_out
reset_req <= altera_reset_synchronizer:alt_rst_req_sync_uq1.reset_out


|top_level|simple_struct:u0|altera_reset_controller:rst_controller|altera_reset_synchronizer:alt_rst_sync_uq1
reset_in => altera_reset_synchronizer_int_chain_out.PRESET
reset_in => altera_reset_synchronizer_int_chain[0].PRESET
reset_in => altera_reset_synchronizer_int_chain[1].PRESET
clk => altera_reset_synchronizer_int_chain_out.CLK
clk => altera_reset_synchronizer_int_chain[0].CLK
clk => altera_reset_synchronizer_int_chain[1].CLK
reset_out <= altera_reset_synchronizer_int_chain_out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|simple_struct:u0|altera_reset_controller:rst_controller|altera_reset_synchronizer:alt_rst_req_sync_uq1
reset_in => altera_reset_synchronizer_int_chain[1].DATAIN
clk => altera_reset_synchronizer_int_chain_out.CLK
clk => altera_reset_synchronizer_int_chain[0].CLK
clk => altera_reset_synchronizer_int_chain[1].CLK
reset_out <= altera_reset_synchronizer_int_chain_out.DB_MAX_OUTPUT_PORT_TYPE


